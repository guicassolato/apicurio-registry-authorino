
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy
  labels:
    app: envoy
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 8000
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: local
              route_config:
                name: local_route
                virtual_hosts:
                - name: apicurio-registry
                  domains: ['*']
                  typed_per_filter_config:
                    envoy.filters.http.ext_authz:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                      check_settings:
                        context_extensions:
                          virtual_host: apicurio-registry
                  routes:
                  - match: { prefix: /apis } # apicurio registry ui protected with authorino
                    route:
                      cluster: apicurio-registry
                      host_rewrite_literal: apicurio-registry.apps.${OPENSHIFT_DOMAIN}
                      append_x_forwarded_host: true
                      rate_limits:
                        - actions:
                          - request_headers:
                              header_name: ":path"
                              descriptor_key: "req.path"
                          - request_headers:
                              header_name: ":method"
                              descriptor_key: "req.method"
                  - match: { prefix: / } # apicurio registry ui not protected with authorino
                    typed_per_filter_config:
                      envoy.filters.http.ext_authz:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                        disabled: true
                      envoy.filters.http.ratelimit:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimitPerRoute
                        vh_rate_limits: ignore
                    route:
                      cluster: apicurio-registry
                      host_rewrite_literal: apicurio-registry.apps.${OPENSHIFT_DOMAIN}
                      append_x_forwarded_host: true
              http_filters:
              - name: envoy.filters.http.oauth2
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                  config:
                    authorization_endpoint: https://keycloak-apicurio-registry.apps.${OPENSHIFT_DOMAIN}/auth/realms/apicurio-registry/protocol/openid-connect/auth
                    redirect_uri: "https://%REQ(:authority)%/callback"
                    token_endpoint:
                      cluster: keycloak
                      uri: https://keycloak-apicurio-registry.apps.${OPENSHIFT_DOMAIN}/auth/realms/apicurio-registry/protocol/openid-connect/token
                      timeout: 3s
                    redirect_path_matcher:
                      path:
                        exact: /callback
                    signout_path:
                      path:
                        exact: /signout
                    credentials:
                      client_id: envoy
                      token_secret:
                        name: token
                        sds_config:
                          path: "/usr/local/etc/envoy/secrets/oauth-token-secret.yaml"
                      hmac_secret:
                        name: hmac
                        sds_config:
                          path: "/usr/local/etc/envoy/secrets/oauth-hmac-secret.yaml"
                    auth_scopes:
                    - openid
                    forward_bearer_token: true
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  transport_api_version: V3
                  failure_mode_allow: false
                  include_peer_certificate: true
                  grpc_service:
                    envoy_grpc:
                      cluster_name: external_auth
                    timeout: 1s
              - name: envoy.filters.http.ratelimit
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                  domain: "envoy"
                  failure_mode_deny: true
                  timeout: 3s
                  rate_limit_service:
                    "transport_api_version": "v3"
                    grpc_service:
                      envoy_grpc:
                        cluster_name: rate_limit
              - name: envoy.filters.http.router
                typed_config: {}
              scheme_header_transformation: { scheme_to_overwrite: https }
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain: { filename: "/etc/ssl/certs/server/tls.crt" }
                  private_key: { filename: "/etc/ssl/certs/server/tls.key" }
                validation_context:
                  trusted_ca:
                    filename: /etc/ssl/certs/server/tls.crt
      clusters:
      - name: keycloak
        connect_timeout: 5s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: keycloak
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: keycloak-apicurio-registry.apps.${OPENSHIFT_DOMAIN}
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: keycloak-apicurio-registry.apps.${OPENSHIFT_DOMAIN}
      - name: external_auth
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        http2_protocol_options: {}
        load_assignment:
          cluster_name: external_auth
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: authorino-authorino-authorization
                    port_value: 50051
      - name: apicurio-registry
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: apicurio-registry
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: apicurio-registry
                    port_value: 8080
      - name: rate_limit
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: round_robin
        http2_protocol_options: {}
        load_assignment:
          cluster_name: apicurio-registry
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: limitador
                    port_value: 8081
    admin:
      access_log_path: "/tmp/admin_access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: v1
kind: Secret
metadata:
  name: envoy-secrets
  labels:
    app: envoy
stringData:
  oauth-token-secret.yaml: |
    resources:
    - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
      name: token
      generic_secret:
        secret:
          inline_string: "77e84241-32a7-4c70-a4c0-0ec6ad9b7f7d"
  oauth-hmac-secret.yaml: |
    resources:
    - "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret"
      name: hmac
      generic_secret:
        secret:
          inline_string: "f11b9fd1-8190-41ba-935c-4e0f4951a2d8"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  labels:
    app: envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
      - args:
        - --config-path /usr/local/etc/envoy/envoy.yaml
        - "--service-node envoy"
        - --service-cluster front-proxy
        - --log-level info
        - --component-log-level filter:trace,http:debug,router:debug
        command:
        - /usr/local/bin/envoy
        image: envoyproxy/envoy-dev:latest
        name: envoy
        ports:
        - containerPort: 8000
          name: web
        - containerPort: 8001
          name: admin
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/envoy
          readOnly: true
        - name: secrets
          mountPath: /usr/local/etc/envoy/secrets
          readOnly: true
        - name: servercerts
          mountPath: /etc/ssl/certs/server
          readOnly: true
        - name: keycloak-cert
          mountPath: /etc/ssl/certs/keycloak.crt
          subPath: keycloak.crt
          readOnly: true
        resources: {}
      volumes:
      - name: config
        configMap:
          name: envoy
          items:
          - key: envoy.yaml
            path: envoy.yaml
      - name: secrets
        secret:
          secretName: envoy-secrets
      - name: servercerts
        secret:
          secretName: sso-x509-https-secret
      - name: keycloak-cert
        configMap:
          name: keycloak-tls-cert-ext
          items:
          - key: keycloak.crt
            path: keycloak.crt
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  labels:
    app: envoy
spec:
  selector:
    app: envoy
  ports:
  - name: web
    port: 8000
    protocol: TCP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: apicurio-registry
spec:
  host: apicurio-registry.apps.${OPENSHIFT_DOMAIN}
  to:
    kind: Service
    name: envoy
  tls:
    termination: passthrough
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
